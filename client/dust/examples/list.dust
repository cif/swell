# swell.List examples

There aren't too many apps out there these days that don't have lists in one form or another. The core list object faciliates simple **click handling, drag 'n' drop reordering and sortable grid headings**.

There are several default [events](/page/api.client.list#events) which [swell.List](/page/api.client.list) will broadcast when lists are interacted with.

### Examples
*Here's a simple drag and drop list example of our object names and colors:*
<div class="simple"></div>
<br>

*Here's an example of a simple heading-sortable grid:*
<div class="grid"></div>
<br>
The interactions in these two exampels are handled by the core [swell.List](/page/api.client.list) object so the router code in the previous section required is minimal but extensible. In Swell, nearly everything is **bound with events** as opposed to relying on function callbacks.

*Here's the code that renders both the sortable list and the grid:*
      
      ...
      list: =>
        helpers.render 'section[role=main]','examples.list', @app, =>
          helpers.loader '.simple,.grid'
          examples.grab (err, models) =>
            @list.render 'examples.list_simple', examples: models
            @grid.render 'examples.list_grid', examples: models
      ...

### Templating Lists

These lists in the examples are rendered by passing a context to a template rendered with [DustJS](https://github.com/linkedin/dustjs/wiki/Dust-Tutorial). In our simple first case, that template is `client/dust/examples/list_simple.dust`

Here's the dust that makes up our simple example with absolutely no frills:

<pre><code>
  &lt;ol class="swell-list sortable"&gt;
    &lcub;#examples&rcub;
      &lt;li id="&lcub;attributes._id&rcub;"&gt;&lt;span style="color:#&lcub;attributes.color&rcub;"&gt;&lcub;attributes.name&rcub;&lt;/span&gt;&lt;/li&gt;
    &lcub;:else&rcub;
      &lt;li class="empty"&gt;There aren't any examples!&lt;/li&gt;
    &lcub;/examples&rcub;
  &lt;/ol&gt;
  
</code></pre>  

Here's the dust that makes our grid. Note the use of a few custom helpers defined in [swell.Helpers](/page/api.client.helpers) :

<pre><code>
  &lt;table class=&quot;grid&quot;&gt;
    &lt;tr&gt;
      &lt;th&gt;Active&lt;/th&gt;
      &lcub;#columns&rcub;
        &lt;th class=&quot;&lcub;@eq value=fields[.].sortable&rcub;sortable &lcub;/eq&rcub;&lcub;@prop key=. obj=fields field=&quot;type&quot;/&rcub;&quot;&gt;&lcub;@prop key=. obj=fields field=&quot;label&quot;/&rcub;&lt;/th&gt;
      &lcub;/columns&rcub;
    &lt;/tr&gt;
    &lcub;#examples&rcub;
      &lt;tr id=&quot;&lcub;attributes._id&rcub;&quot;&gt;
        &lt;td&gt;&lcub;@checkbox name=&quot;active&quot; bind=&quot;_id&quot; obj=attributes /&rcub;&lt;/td&gt;
        &lcub;#columns&rcub;
          &lt;td data-bind=&quot;&lcub;.&rcub;&quot;&gt;&lcub;@format field=fields[.] obj=attributes key=. /&rcub;&lt;/td&gt;
        &lcub;/columns&rcub;
      &lt;/tr&gt;
    &lcub;/examples&rcub; 
  &lt;/table&gt;
</code></pre>  
